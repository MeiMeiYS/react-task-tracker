{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAddTask","prototype","PropTypes","string","isRequired","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7708b176.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n\r\n    return <button onClick={onClick} style={{ backgroundColor: color }} className='btn'>{ text }</button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string, \r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAddTask }) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAddTask ? 'red' : 'green'} text={showAddTask ? 'Close' : 'Add'} onClick={onAdd} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps ={\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.prototype = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : '' }`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{ task.text } <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} /></h3>\r\n            <p>{ task.day }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nTasks.propTypes = {\r\n\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n        onAdd({ text, day, reminder })\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className='add-form' onSubmit={onSubmit}>\r\n                <div className='form-control'>\r\n                    <label>Task</label>\r\n                    <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label>Day & Time</label>\r\n                    <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)} />\r\n                </div>\r\n                <div className='form-control form-control-check'>\r\n                    <label>Set Reminder</label>\r\n                    <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n                </div>\r\n                <input type='submit' value='Save Task' className='btn btn-block' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {\n        id:1, \n        text: 'Doctors Appointment', \n        day: 'Feb 5th at 2:30pm', \n        reminder: true,\n    }, \n    {\n        id:2, \n        text: 'Meeting at School', \n        day: 'Feb 6th at 1:30pm', \n        reminder: true,},\n    {\n        id:3, \n        text: 'Food Shopping', \n        day: 'Feb 5th at 2:30pm', \n        reminder: false,\n    },\n  ])\n\n  //Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([ ...tasks, newTask ])\n  }\n\n\n\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n \n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } :task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAddTask={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Tasks To Show'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}